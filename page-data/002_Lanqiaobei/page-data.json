{"componentChunkName":"component---src-templates-blog-post-js","path":"/002_Lanqiaobei/","result":{"data":{"site":{"siteMetadata":{"title":"JokerDebug"}},"markdownRemark":{"id":"5c4bee41-8355-5207-900c-51c12e934afd","excerpt":"一、前言 从今天开始，笔者将向大家逐一讲解蓝桥杯的大部分竞赛模块，笔者将基于上一篇文章（[蓝桥杯单片机设计与开发_标准模板](https://joker001014.github.io/blog/001 Lanqiaobei)）中讲解的标准模板编写程序。按照顺序（DS18B20、DS1302、PCF8591、AT24C…","html":"<h2>一、前言</h2>\n<p>从今天开始，笔者将向大家逐一讲解蓝桥杯的大部分竞赛模块，笔者将基于上一篇文章（[蓝桥杯单片机设计与开发_标准模板](<a href=\"https://joker001014.github.io/blog/001\">https://joker001014.github.io/blog/001</a> Lanqiaobei)）中讲解的标准模板编写程序。按照顺序（DS18B20、DS1302、PCF8591、AT24C02、PWM、串口通信、NE555以及超声波测距），为大家做出详细编程指导。</p>\n<h2>二、DS18B20 温度传感器</h2>\n<p>DS18B20 又叫温度传感器。笔者将基于蓝桥杯官方给的赛点资源包（<a href=\"https://download.csdn.net/download/weixin_53159274/18576531\">蓝桥杯单片机设计与开发_赛点资源数据包</a>）进行编程，为大家讲解编程调用各语句的含义，帮助大家编写温度传感器的程序，也便于大家记忆。</p>\n<h3>1、==导入底层驱动代码==</h3>\n<p>首先，创建工程和导入.c文件笔者已在文章（<a href=\"https://blog.csdn.net/weixin_53159274/article/details/116534261\">蓝桥杯单片机设计与开发_标准模板</a>）中向大家详细介绍了，这里就不再赘述。\r\n读者可下载赛点资源包（<a href=\"https://download.csdn.net/download/weixin_53159274/18576531\">蓝桥杯单片机设计与开发_赛点资源数据包</a>），解压后可得到以下图片所示文件。\r\n<img src=\"https://i-blog.csdnimg.cn/blog_migrate/1c4d8bb1dcb9e547554de7cf12af67b4.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n我们双击打开文件“3-底层驱动代码参考”文件，将得到以下.c.h文件。接下来将包含DS18B20 的文件onewire.c 和 onewire.h 文件拷贝到工程所在文件夹中。\r\n<img src=\"https://i-blog.csdnimg.cn/blog_migrate/153a08155e563e45e4ae2f16a9fa1431.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n然后双击工程中 Source Group 1，将这两个文件导入，便可以开始编写程序了。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/7a8ba44c1524f7130abde7cbe48163ae.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h3>2、==DS18B20驱动函数==</h3>\n<p>首先，在编写驱动函数之前，我们需要对底层驱动代码 onewire.c 中的延迟函数 Delay_OneWire() 做出修改，将==延迟时间增大 12 倍！==。因为比赛使用的IAP15系列单片机速度比STC89C52系列单片机速度快12倍，如果不改时序上将出现问题，无法正常读取温度。\r\n笔者采用一个 for 循环，在 while 循环中重复循环 12 次，达到延迟效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">Delay_OneWire</span><span class=\"token punctuation\">(</span>u16 t<span class=\"token punctuation\">)</span>  <span class=\"token comment\">//STC89C52RC</span>\r\n<span class=\"token punctuation\">{</span>\r\n\tu8 num<span class=\"token punctuation\">;</span>                             <span class=\"token comment\">//定义计数变量</span>\r\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\r\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//延迟时长扩大12倍</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接下来，就开始在 onewire.c 文件中编写温度读取函数。我们可以打开赛点资源数据包中的文件“5-竞赛板芯片资料”。</p>\n<p><img src=\"https://i-blog.csdnimg.cn/blog_migrate/d5c53a59516e92f328ae40ed8e800007.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n打开“DS18B20”芯片手册。笔者将借助芯片手册中的资料编写温度读取函数并为大家讲解。\r\n<img src=\"https://i-blog.csdnimg.cn/blog_migrate/d9433b3ccc577d2fce699bc8972afc20.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n==温度读取函数==：在编写温度读取函数时，我们只需要通过调用底层驱动函数中的初始化、写入、读取函数。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">rd_temperature</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">//读取温度函数</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">//定义温度读取返回值</span>\r\n\tu8 tmh<span class=\"token punctuation\">,</span>tml<span class=\"token punctuation\">;</span>              <span class=\"token comment\">//定义温度读取高八位和第八位</span>\r\n\t\r\n    <span class=\"token function\">init_ds18b20</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">//设备初始化</span>\r\n\t<span class=\"token function\">Write_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xcc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//跳过ROM地址指令</span>\r\n\t<span class=\"token function\">Write_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x44</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//安装温度转换指令</span>\r\n\t\r\n\t<span class=\"token function\">init_ds18b20</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">Write_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xcc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//跳过ROM地址指令</span>\r\n\t<span class=\"token function\">Write_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xbe</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//安装温度读取指令</span>\r\n\t\r\n\ttml<span class=\"token operator\">=</span><span class=\"token function\">Read_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//读取低八位</span>\r\n\ttmh<span class=\"token operator\">=</span><span class=\"token function\">Read_DS18B20</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//读取高八位</span>\r\n\t\r\n\t<span class=\"token comment\">//将温度高八位和低八位组合成16位int类型</span>\r\n\ttemp <span class=\"token operator\">=</span> tmh<span class=\"token punctuation\">;</span>\r\n\ttemp <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\r\n\ttemp <span class=\"token operator\">|=</span> tml<span class=\"token punctuation\">;</span>\r\n\t\r\n\t<span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>             <span class=\"token comment\">//返回温度读取值</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>其中，在写入函数 Write_DS18B20() 写入的指令可通过查阅芯片资料手册，不需要死记硬背。\r\n<img src=\"https://i-blog.csdnimg.cn/blog_migrate/28a20e2c8eb09156f84f512bb040d9fb.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n<img src=\"https://i-blog.csdnimg.cn/blog_migrate/4da6e24b1fa02fbeda791ab9fe719b04.jpeg#pic_center\" alt=\"在这里插入图片描述\">\r\n在编写完温度传感器驱动函数后务必要在 onewire.h 文件中声明函数，才可在主函数中调用。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">__ONEWIRE_H</span></span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">__ONEWIRE_H</span></span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">rd_temperature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//声明函数</span>\r\n\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></code></pre></div>\n<h3>3、==主函数调用==</h3>\n<p>在主函数中调用温度传感器驱动函数，首先需要在主函数开头包含驱动 DS18B20 驱动函数的头文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"STC15F2K60S2.h\"</span>   <span class=\"token comment\">//头文件</span></span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"onewire.h\"</span>        <span class=\"token comment\">//包含DS18B20驱动头文件</span></span></code></pre></div>\n<p>==温度数值转换函数==\r\n编写温度数据转换函数需要注意的是：读取温度数值需要再乘以 0.0625 转换成十进制温度值。笔者将读取温度值读取到小数点后四位，采用的方法是将乘以 0.0625 后的数据放大 10000 倍，再通过取余除数的方法得到各位小数值。因数值放大到百万级别，因此需要定义长整型数值。\r\n得到各位数后，通过改变缓冲区 dspbuf 的数值，在数码管1~7中显示读取到的温度数值。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">datachange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> temp<span class=\"token punctuation\">)</span>     <span class=\"token comment\">//读取温度数据转换函数</span>\r\n<span class=\"token punctuation\">{</span>\r\n\ttemp <span class=\"token operator\">=</span> temp<span class=\"token operator\">*</span><span class=\"token number\">0.0625</span><span class=\"token operator\">*</span><span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">//放大10000倍，读取小数点后四位</span>\r\n                    \r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">/</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">//取温度的百位数</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">1000000</span><span class=\"token operator\">/</span><span class=\"token number\">100000</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//取温度的十位数</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">100000</span><span class=\"token operator\">/</span><span class=\"token number\">10000</span><span class=\"token operator\">+</span><span class=\"token number\">11</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//取温度个位数并加上小数点</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">10000</span><span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//取温度的小数点第一位</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">1000</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//取温度的小数点第二位</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">100</span><span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\">//取温度的小数点第三位</span>\r\n\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">//取温度的小数点第四位</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>除此之外，笔者将个位数后的小数点显示出来，采取的方法是在定义 tab 数组时，在后面再定义十个小数点点亮的数，即通过将 0~9 对应的高八位减去 8，即可点亮小数点 dp 位。再在数码管显示的缓冲区上加上 11，即可显示带小数点的数字。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">u8 code tab<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0xc0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xb0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x79</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x24</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x19</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x02</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//定义数组存放数码管数字状态</span></code></pre></div>\n<p>==中断函数==\r\n笔者在中断函数中定义每 50ms 产生一次中断，将温度读取标志位置 1，进行温度读取。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">bit temp_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">//定义温度读取标志位</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">timer0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> interrupt <span class=\"token number\">1</span>    <span class=\"token comment\">//定义中断模式1</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">static</span> u8 t_20ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//定义静态变量计时20ms</span>\r\n\t<span class=\"token keyword\">static</span> u8 t_50ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">//定义静态变量计时50ms</span>\r\n\t\r\n\t<span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">//数码管显示函数</span>\r\n\t\r\n\tt_20ms<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">//计数自增</span>\r\n\tt_50ms<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\">//计数自增</span>\r\n\t\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t_20ms <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">//判断计时时间</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tt_20ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">//计数清零</span>\r\n\t\tkey_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">//按键标志位置1</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t_50ms <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">//判断计时时间</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tt_50ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\">//计数清零</span>\r\n\t\ttemp_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">//温度标志位置1</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>==main主函数==\r\n笔者在主函数开头中定义温度读取开关变量 temp_w，通过与 1 异或，可实功能：按一次 S4 打开温度传感器，每 50ms 读取一次温度；再按一次 S4 关闭温度传感器。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">//主函数</span>\r\n<span class=\"token punctuation\">{</span>\r\n\tu8 key_re<span class=\"token punctuation\">;</span>     <span class=\"token comment\">//定义变量读取按键返回值</span>\r\n\tu8 temp_w <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//定义温度读取开关变量</span>\r\n\t\r\n\t<span class=\"token function\">all_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//初始化函数</span>\r\n\t<span class=\"token function\">Timer0Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//定时器0初始化</span>\r\n\t\r\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key_flag<span class=\"token punctuation\">)</span>            <span class=\"token comment\">//每20ms扫描一次按键</span>\r\n\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\tkey_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">//标志位置0</span>\r\n\t\t\tkey_re <span class=\"token operator\">=</span> <span class=\"token function\">Read_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//读取按键</span>\r\n\t\t\t \r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key_re <span class=\"token operator\">!=</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//判断按键是否按下</span>\r\n\t\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\t\t<span class=\"token comment\">//判断按键</span>\r\n\t\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key_re<span class=\"token punctuation\">)</span>\r\n\t\t\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t<span class=\"token comment\">//放入需要执行的功能</span>\r\n\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> temp_w <span class=\"token operator\">^=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//按一次按键打开/关闭温度传感器</span>\r\n\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>temp_w<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>temp_flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">//定义温度读取函数</span>\r\n\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\ttemp_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\">//清空标志位</span>\r\n\t\t\t<span class=\"token function\">datachange</span><span class=\"token punctuation\">(</span><span class=\"token function\">rd_temperature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//调用温度读取及转换函数</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>至此，本次 DS18B20 温度传感器程序已编写完毕。由于笔者近期事情比较多，更新文章较慢，请各位见谅。接下来几天笔者也将尽量早点将各个模块的编程都更新完毕！欢迎读者在评论区交流！！</p>","frontmatter":{"title":"蓝桥杯单片机设计与开发_基础模块_DS18B20","date":"May 12, 2021","description":"本文介绍了蓝桥杯单片机编程大赛标准模板，涵盖了初始化函数、锁存器驱动、数码管驱动函数、矩阵键盘/独立键盘以及定时器中断等模块的可编译.c文件。"}},"previous":{"fields":{"slug":"/001_Lanqiaobei/"},"frontmatter":{"title":"蓝桥杯单片机设计与开发_标准模版"}},"next":null},"pageContext":{"id":"5c4bee41-8355-5207-900c-51c12e934afd","previousPostId":"8f51c9f3-0ba0-5c49-88a9-3b5f0d570c83","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}