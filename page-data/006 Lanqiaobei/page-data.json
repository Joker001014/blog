{"componentChunkName":"component---src-templates-blog-post-js","path":"/006 Lanqiaobei/","result":{"data":{"site":{"siteMetadata":{"title":"JokerDebug"}},"markdownRemark":{"id":"359bbddb-30cb-500c-b759-cf41a8f47927","excerpt":"Github代码仓库链接 一、前言 承接上文，本文将继续介绍剩余蓝桥杯涉及模块（PWM、串口通信、NE555以及超声波测距），为大家做出详细编程指导。 二、PWM PWM 是脉宽调制（Pulse Width Modulation）的缩写。它是一种常用的调制技术，用于控制电子设备中的电源或信号。通过调整 PWM…","html":"<p><a href=\"https://github.com/Joker001014/LanQiaoCup\">Github代码仓库链接</a></p>\n<h2>一、前言</h2>\n<p>承接上文，本文将继续介绍剩余蓝桥杯涉及模块（PWM、串口通信、NE555以及超声波测距），为大家做出详细编程指导。</p>\n<h2>二、PWM</h2>\n<p>PWM 是脉宽调制（Pulse Width Modulation）的缩写。它是一种常用的调制技术，用于控制电子设备中的电源或信号。通过调整 PWM 信号的占空比，可以实现对输出信号的精确控制。</p>\n<h3>1、PWM原理剖析</h3>\n<p>本文将编写程序，实现：频率为 <code class=\"language-text\">1000Hz</code> ，占空比可通过按键调节。\r\n将使用两个定时器，定时器 0 设置为 <code class=\"language-text\">100us</code>，用来控制占空比；定时器 1 设置为 <code class=\"language-text\">2ms</code>，用来检测按键及数码管显示等。</p>\n<p>编程思路：定义单片机上<code class=\"language-text\">P34</code>引脚为<code class=\"language-text\">pwm</code>，如： <code class=\"language-text\">sbit pwm = P3^4</code>，初始 <code class=\"language-text\">pwm = 1</code>。假设要设置20%占空比，则可在定时器 0 中断服务函数中计数，若计数值超过 2 则设令 <code class=\"language-text\">pwm = 0</code>；若计数超过10则<code class=\"language-text\">pwm</code>继续置1。即可实现占空比为20%，频率为 1/(10*100us) = 1000Hz。</p>\n<h3>2、核心代码</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// 定时器0中断服务函数</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">timer0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> interrupt <span class=\"token number\">1</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">static</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// pwm_plus可通过按键调节，pwm_plus = 2，则占空比20%；pwm_plus = 5，则占空比50%</span>\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tt <span class=\"token operator\">>=</span> pwm_plus<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tpwm <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">else</span>   <span class=\"token comment\">// 初始状态为 1</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tpwm <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t\r\n\ttt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 奇数超过10复位，则周期为10*100us，频率为1000Hz。（可通过修改该值来改变PWM频率）</span>\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tt <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n\t\ttt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>3、整体代码</h3>\n<p>由于考虑初学者基础较为薄弱，因此将完整的代码贴出来，包含中断函数、矩阵键盘、数码管显示等，并且在关键处进行了注释，希望对大家有所帮助。</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// 包含头文件</span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"STC15F2K60S2.h\"</span></span>\r\n\r\n<span class=\"token comment\">// 数据类型定义</span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">u8</span> <span class=\"token expression\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span></span></span>\r\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">u16</span> <span class=\"token expression\"><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span></span></span>\r\n\r\n<span class=\"token comment\">// 8位数码管状态</span>\r\nu8 dspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\nu8 code tab<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0xc0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xa4</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xb0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x99</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x92</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x82</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xf8</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xbf</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xc6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\nu8 pwm_plus <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>dspcom <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\nbit key_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>led_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\nsbit pwm <span class=\"token operator\">=</span> P3<span class=\"token operator\">^</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// 定时器 0 初始化</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">Timer0Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">//100微秒@12.000MHz</span>\r\n<span class=\"token punctuation\">{</span>\r\n\tAUXR <span class=\"token operator\">|=</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//定时器时钟1T模式</span>\r\n\tTMOD <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0xF0</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时器模式</span>\r\n\tTL0 <span class=\"token operator\">=</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时初值</span>\r\n\tTH0 <span class=\"token operator\">=</span> <span class=\"token number\">0xFB</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时初值</span>\r\n\tTF0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//清除TF0标志</span>\r\n\tTR0 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//定时器0开始计时</span>\r\n\t\r\n\tET0 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\tEA <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 定时器 1 初始化</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">Timer1Init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">//2毫秒@12.000MHz</span>\r\n<span class=\"token punctuation\">{</span>\r\n\tAUXR <span class=\"token operator\">|=</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//定时器时钟1T模式</span>\r\n\tTMOD <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时器模式</span>\r\n\tTL1 <span class=\"token operator\">=</span> <span class=\"token number\">0x40</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时初值</span>\r\n\tTH1 <span class=\"token operator\">=</span> <span class=\"token number\">0xA2</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//设置定时初值</span>\r\n\tTF1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//清除TF1标志</span>\r\n\tTR1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">//定时器1开始计时</span>\r\n\t\r\n\tET1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\tEA <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 573锁存器封装成函数</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">door</span><span class=\"token punctuation\">(</span>u8 choose<span class=\"token punctuation\">,</span>u8 input<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n\tP2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>P2 <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x1f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> choose<span class=\"token punctuation\">;</span>\r\n\tP0 <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\r\n\tP2 <span class=\"token operator\">&amp;=</span> <span class=\"token number\">0x1f</span><span class=\"token punctuation\">;</span>\t\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 关灯、蜂鸣器</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">all_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n \t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xaf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 数码管显示函数</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 消隐</span>\r\n\t\r\n\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x01</span><span class=\"token operator\">&lt;&lt;</span>dspcom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe0</span><span class=\"token punctuation\">,</span>tab<span class=\"token punctuation\">[</span>dspbuf<span class=\"token punctuation\">[</span>dspcom<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dspcom <span class=\"token operator\">>=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\r\n\t\tdspcom <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 矩阵键盘，接KBD</span>\r\nu8 keypress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>keyvalue <span class=\"token operator\">=</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span>keyread <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\nu8 <span class=\"token function\">Read_key</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\t\t                              \t<span class=\"token comment\">//矩阵键盘，接KBD</span>\r\n<span class=\"token punctuation\">{</span>\r\n    u8 key_m<span class=\"token punctuation\">,</span>cal<span class=\"token punctuation\">;</span>\r\n    \r\n    P3 <span class=\"token operator\">=</span> <span class=\"token number\">0xf0</span><span class=\"token punctuation\">;</span>P42<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>P44<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n  \tP36<span class=\"token operator\">=</span>P42<span class=\"token punctuation\">;</span>P37<span class=\"token operator\">=</span>P44<span class=\"token punctuation\">;</span>\t\t\t   <span class=\"token comment\">//变量替换</span>\r\n    key_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>P3 <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key_m <span class=\"token operator\">!=</span> <span class=\"token number\">0xf0</span><span class=\"token punctuation\">)</span> \r\n        keypress<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n   <span class=\"token keyword\">else</span>\r\n        keypress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \r\n    \r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>keypress <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n\t\t  keypress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t  \tkeyread <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\t\t  <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key_m<span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0x70</span><span class=\"token operator\">:</span>cal <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>                \r\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0xb0</span><span class=\"token operator\">:</span>cal <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>    \r\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0xd0</span><span class=\"token operator\">:</span>cal <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>    \r\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0xe0</span><span class=\"token operator\">:</span>cal <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        \r\n        P3 <span class=\"token operator\">=</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">;</span>P42<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>P44<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\tP36<span class=\"token operator\">=</span>P42<span class=\"token punctuation\">;</span>P37<span class=\"token operator\">=</span>P44<span class=\"token punctuation\">;</span>\t\t\t   <span class=\"token comment\">//变量替换</span>\r\n        key_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>P3 <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        \r\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key_m<span class=\"token punctuation\">)</span>\r\n\t\t\t\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x0e</span><span class=\"token operator\">:</span>keyvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>cal<span class=\"token operator\">+</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>                \r\n\t\t\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x0d</span><span class=\"token operator\">:</span>keyvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>cal<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>    \r\n\t\t\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x0b</span><span class=\"token operator\">:</span>keyvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>cal<span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>    \r\n\t\t\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0x07</span><span class=\"token operator\">:</span>keyvalue <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span>cal<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    P3 <span class=\"token operator\">=</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">;</span>P42<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>P44<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\tP36<span class=\"token operator\">=</span>P42<span class=\"token punctuation\">;</span>P37<span class=\"token operator\">=</span>P44<span class=\"token punctuation\">;</span>\t\t\t                <span class=\"token comment\">//变量替换</span>\r\n    key_m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>P3<span class=\"token operator\">&amp;</span><span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>keyread <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>key_m <span class=\"token operator\">==</span> <span class=\"token number\">0x0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        keyread <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> keyvalue<span class=\"token punctuation\">;</span>\t\r\n    <span class=\"token punctuation\">}</span>\r\n    \r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>  \r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">//````````````````````````````````主函数````````````````````````````````````</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>      \r\n<span class=\"token punctuation\">{</span>\r\n\tu8 key_re<span class=\"token punctuation\">,</span>mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>led_put <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 初始化</span>\r\n\t<span class=\"token function\">all_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">Timer0Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token function\">Timer1Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\r\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\t<span class=\"token comment\">// 实时显示当前设置的占空比</span>\r\n\t\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pwm_plus<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n\t\tdspbuf<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pwm_plus<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\r\n\t\t\r\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key_flag<span class=\"token punctuation\">)</span>\t\t\t\r\n\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\tkey_flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\t\tkey_re <span class=\"token operator\">=</span> <span class=\"token function\">Read_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\r\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key_re <span class=\"token operator\">!=</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span>\r\n\t\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>key_re<span class=\"token punctuation\">)</span>\r\n\t\t\t\t<span class=\"token punctuation\">{</span>\r\n\t\t\t\t\t<span class=\"token comment\">// 按键调节占空比</span>\r\n\t\t\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span>pwm_plus<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pwm_plus <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n\t\t\t\t\t\t\t\t\t\tpwm_plus <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\r\n\t\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t\t<span class=\"token punctuation\">}</span>\r\n\t\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 定时器 0 中断服务函数</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">timer0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> interrupt <span class=\"token number\">1</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">static</span> tt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// pwm_plus可通过按键调节，pwm_plus = 2，则占空比20%；pwm_plus = 5，则占空比50%</span>\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tt <span class=\"token operator\">>=</span> pwm_plus<span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tpwm <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n\t<span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">else</span>   <span class=\"token comment\">// 初始状态为 1</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tpwm <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\t\t<span class=\"token function\">door</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t\r\n\ttt<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token comment\">// 奇数超过10复位，则周期为10*100us，频率为1000Hz。（可通过修改该值来改变PWM频率）</span>\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tt <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n\t\ttt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// 定时器 1 中断服务函数</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">timer1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> interrupt <span class=\"token number\">3</span>\r\n<span class=\"token punctuation\">{</span>\r\n\t<span class=\"token keyword\">static</span> u8  t_20ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//MAX = 500 ms</span>\r\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> t_1s<span class=\"token punctuation\">;</span>\r\n\t\r\n\t<span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n\tt_20ms<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n\tt_1s<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t_20ms <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">//每20ms扫描一次按键</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tt_20ms <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\tkey_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n\t\r\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>t_1s <span class=\"token operator\">>=</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span>\r\n\t<span class=\"token punctuation\">{</span>\r\n\t\tt_1s <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n\t\tled_flag <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n\t<span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>至此，本次 PWM 已介绍完毕。</p>","frontmatter":{"title":"蓝桥杯单片机设计与开发_基础模块_PWM","date":"May 24, 2021","description":"本文介绍了蓝桥杯单片机编程大赛PWM输出模块的编程使用方法。"}},"previous":{"fields":{"slug":"/005_Lanqiaobei/"},"frontmatter":{"title":"蓝桥杯单片机设计与开发_基础模块_AT24C02"}},"next":{"fields":{"slug":"/007 Lanqiaobei/"},"frontmatter":{"title":"蓝桥杯单片机设计与开发_基础模块_串口通信"}}},"pageContext":{"id":"359bbddb-30cb-500c-b759-cf41a8f47927","previousPostId":"a68b5677-7031-5f4b-add3-7b55a88389ba","nextPostId":"aa4df4cc-ad0e-5b3a-a655-bc27b6ec9411"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}